pipeline {
  agent any

  environment {
    COMPOSE_PROJECT_DIR = "${WORKSPACE}/infra"
  }

  stages {
    stage('Secret 파일 다운로드') {
      steps {
        withCredentials([
          file(credentialsId: 'env-docker-compose', variable: 'ENV_FILE'),
          file(credentialsId: 'spring-secrets', variable: 'SECRETS_FILE'),
          file(credentialsId: 'env-frontend', variable: 'FRONTEND_ENV_FILE')
        ]) {
          sh '''
            cp "$ENV_FILE" infra/.env
            cp "$SECRETS_FILE" backend/src/main/resources/secrets.properties
            cp "$FRONTEND_ENV_FILE" frontend/.env
          '''
        }
      }
    }

    stage('GitLab 연동 확인') {
      steps {
        echo "✅ GitLab 소스 코드 정상 연동 완료!"
      }
    }

    stage('프론트엔드 빌드') {
      steps {
        echo "🛠️ 프론트엔드 빌드 시작"
        dir('frontend') {
          sh '''
            npm install
            npm run build
            cp -r dist/* ../frontend/dist
          '''
        }
      }
    }

    stage('도커 이미지 빌드 및 변경 서비스만 재시작') {
      steps {
        echo "🚀 변경된 서비스만 빌드 및 재시작 (DB는 중단 없이 유지)"
        sh '''
          docker compose -f infra/docker-compose.yml build --no-cache
          docker compose -f infra/docker-compose.yml up -d
        '''
      }
    }
  }

  post {
    failure {
      echo '❌ 빌드 실패! 에러 로그를 확인해주세요.'
    }
    success {
      echo '🎉 배포 성공! Letterring 서비스가 자동으로 배포되었습니다.'
    }
  }
}
